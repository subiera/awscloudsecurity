#!/bin/bash -x

aws logs put-metric-filter --region $Region --log-group-name $LogGroupName --filter-name AWSConfigChanges --filter-pattern '{  ($.eventSource = config.amazonaws.com) && (($.eventName = StopConfigurationRecorder)||($.eventName = DeleteDeliveryChannel)||($.eventName = PutDeliveryChannel)||($.eventName = PutConfigurationRecorder)) }' --metric-transformations metricName=ConfigEventCount,metricNamespace=CloudTrailMetrics,metricValue=1		
aws cloudwatch put-metric-alarm --region $Region --alarm-name AWSConfigChangesAlarm --alarm-description "Triggered by AWS Config changes." --metric-name ConfigEventCount --namespace CloudTrailMetrics --statistic Sum --comparison-operator GreaterThanOrEqualToThreshold --evaluation-periods 1 --period 300 --threshold 1 --actions-enabled --alarm-actions $SNSARN
aws logs put-metric-filter --region $Region --log-group-name $LogGroupName --filter-name OrganizationsChanges --filter-pattern '{($.eventSource = organizations.amazonaws.com) && ($.eventName = AcceptHandshake) || ($.eventName = AttachPolicy) || ($.eventName = CancelHandshake) || ($.eventName = CreateAccount) || ($.eventName = CreateOrganization) || ($.eventName = CreateOrganizationalUnit) || ($.eventName = CreatePolicy) || ($.eventName = DeclineHandshake) || ($.eventName = DeleteOrganization) || ($.eventName = DeleteOrganizationalUnit) || ($.eventName = DeletePolicy) || ($.eventName = EnableAllFeatures) || ($.eventName = EnablePolicyType) || ($.eventName = InviteAccountToOrganization) || ($.eventName = LeaveOrganization) || ($.eventName = DetachPolicy) || ($.eventName = DisablePolicyType) || ($.eventName = MoveAccount) || ($.eventName = RemoveAccountFromOrganization) || ($.eventName = UpdateOrganizationalUnit) || ($.eventName = UpdatePolicy)}' --metric-transformations metricName=OrganizationsEvents,metricNamespace=CloudTrailMetrics,metricValue=1
aws cloudwatch put-metric-alarm --region $Region --alarm-name OrganizationsChangesAlarm --alarm-description "Triggered by AWS Organizations events." --metric-name OrganizationsEvents --namespace CloudTrailMetrics --statistic Sum --comparison-operator GreaterThanOrEqualToThreshold --evaluation-periods 1 --period 300 --threshold 1 --actions-enabled --alarm-actions $SNSARN
aws logs put-metric-filter --region $Region --log-group-name $LogGroupName --filter-name AWSAuthorizationFailures --filter-pattern '{ $.errorCode = "AccessDenied" || $.errorCode = "UnauthorizedOperation" }' --metric-transformations metricName=AuthorizationFailureCount,metricNamespace=CloudTrailMetrics,metricValue=1
aws cloudwatch put-metric-alarm --region $Region --alarm-name "Authorization Failures" --alarm-description "Alarm triggered when unauthorized API calls are made" --metric-name AuthorizationFailureCount --namespace CloudTrailMetrics --statistic Sum --comparison-operator GreaterThanOrEqualToThreshold --evaluation-periods 1 --period 300 --threshold 1 --actions-enabled --alarm-actions $SNSARN
aws logs put-metric-filter --region $Region --log-group-name $LogGroupName --filter-name AWSCMKChanges --filter-pattern '{ ($.eventSource = kms.amazonaws.com) && (($.eventName = DisableKey) || ($.eventName = ScheduleKeyDeletion)) }' --metric-transformations metricName=CMKEventCount,metricNamespace=CloudTrailMetrics,metricValue=1
aws cloudwatch put-metric-alarm --region $Region --alarm-name AWSCMKChangesAlarm --alarm-description "Triggered by AWS CMK changes." --metric-name CMKEventCount --namespace CloudTrailMetrics --statistic Sum --comparison-operator GreaterThanOrEqualToThreshold --evaluation-periods 1 --period 300 --threshold 1 --actions-enabled --alarm-actions $SNSARN
aws logs put-metric-filter --region $Region --log-group-name $LogGroupName --filter-name AWSCloudTrailChanges --filter-pattern '{ ($.eventName = CreateTrail) || ($.eventName = UpdateTrail) || ($.eventName = DeleteTrail) || ($.eventName = StartLogging) || ($.eventName = StopLogging) }' --metric-transformations metricName=CloudTrailEventCount,metricNamespace=CloudTrailMetrics,metricValue=1
aws cloudwatch put-metric-alarm --region $Region --alarm-name "CloudTrail Changes" --alarm-description "Triggered by AWS CloudTrail configuration changes." --metric-name CloudTrailEventCount --namespace CloudTrailMetrics --statistic Sum --comparison-operator GreaterThanOrEqualToThreshold --evaluation-periods 1 --period 300 --threshold 1 --actions-enabled --alarm-actions $SNSARN
aws logs put-metric-filter --region $Region --log-group-name $LogGroupName --filter-name AWSConsoleSignInFailures --filter-pattern '{ ($.eventName = ConsoleLogin) && ($.errorMessage = "Failed authentication") }' --metric-transformations metricName=ConsoleSigninFailureCount,metricNamespace=CloudTrailMetrics,metricValue=1
aws cloudwatch put-metric-alarm --region $Region --alarm-name "Console Sign-in Failures" --alarm-description "AWS Management Console Sign-in Failure Alarm." --metric-name ConsoleSigninFailureCount --namespace CloudTrailMetrics --statistic Sum --comparison-operator GreaterThanOrEqualToThreshold --evaluation-periods 1 --period 300 --threshold 3 --actions-enabled --alarm-actions $SNSARN
aws logs put-metric-filter --region $Region --log-group-name $LogGroupName --filter-name ConsoleSignInWithoutMfaCount --filter-pattern '{($.eventName = "ConsoleLogin") && ($.additionalEventData.MFAUsed != "Yes")}' --metric-transformations metricName=ConsoleSignInWithoutMfaCount,metricNamespace=CloudTrailMetrics,metricValue=1
aws cloudwatch put-metric-alarm --region $Region --alarm-name ConsoleSignInWithoutMfaAlarm --alarm-description "Triggered by sign-in requests made without MFA." --metric-name ConsoleSignInWithoutMfaCount  --namespace CloudTrailMetrics --statistic Sum --comparison-operator GreaterThanOrEqualToThreshold --evaluation-periods 1 --period 300 --threshold 1 --actions-enabled --alarm-actions $SNSARN
aws logs put-metric-filter --region $Region --log-group-name $LogGroupName --filter-name EC2InstanceStatusChanges --filter-pattern '{ ($.eventName = RunInstances) || ($.eventName = RebootInstances) || ($.eventName = StartInstances) || ($.eventName = StopInstances) || ($.eventName = TerminateInstances) }' --metric-transformations metricName=EC2InstanceEventCount,metricNamespace=CloudTrailMetrics,metricValue=1
aws cloudwatch put-metric-alarm --region $Region --alarm-name EC2InstanceChangesAlarm --alarm-description "Triggered by EC2 instances config/status changes." --metric-name EC2InstanceEventCount --namespace CloudTrailMetrics --statistic Sum --comparison-operator GreaterThanOrEqualToThreshold --evaluation-periods 1 --period 300 --threshold 1 --actions-enabled --alarm-actions $SNSARN
aws logs put-metric-filter --region $Region --log-group-name $LogGroupName --filter-name LaunchEC2LargeInstance --filter-pattern '{ ($.eventName = RunInstances) && (($.requestParameters.instanceType = *.8xlarge) || ($.requestParameters.instanceType = *.4xlarge)) }' --metric-transformations metricName=EC2LargeInstanceEventCount,metricNamespace=CloudTrailMetrics,metricValue=1
aws cloudwatch put-metric-alarm --region $Region --alarm-name EC2LargeInstanceLaunchAlarm --alarm-description "Triggered by large EC2 instances launch events." --metric-name EC2LargeInstanceEventCount --namespace CloudTrailMetrics --statistic Sum --comparison-operator GreaterThanOrEqualToThreshold --evaluation-periods 1 --period 300 --threshold 1 --actions-enabled --alarm-actions $SNSARN
aws logs put-metric-filter --region $Region --log-group-name $LogGroupName --filter-name IAMAuthConfigChanges --filter-pattern '{ ($.eventName = DeleteGroupPolicy) || ($.eventName = DeleteRolePolicy) || ($.eventName = DeleteUserPolicy) || ($.eventName = PutGroupPolicy) || ($.eventName = PutRolePolicy) || ($.eventName = PutUserPolicy) || ($.eventName = CreatePolicy) || ($.eventName = DeletePolicy) || ($.eventName = CreatePolicyVersion) || ($.eventName = DeletePolicyVersion) || ($.eventName = AttachRolePolicy) || ($.eventName = DetachRolePolicy) || ($.eventName = AttachUserPolicy) || ($.eventName = DetachUserPolicy) || ($.eventName = AttachGroupPolicy) || ($.eventName = DetachGroupPolicy) }' --metric-transformations metricName=IAMPolicyEventCount,metricNamespace=CloudTrailMetrics,metricValue=1
aws cloudwatch put-metric-alarm --region $Region --alarm-name IAMAuthorizationActivityAlarm --alarm-description "Triggered by AWS IAM authorization config changes." --metric-name IAMPolicyEventCount --namespace CloudTrailMetrics --statistic Sum --comparison-operator GreaterThanOrEqualToThreshold --evaluation-periods 1 --period 300 --threshold 1 --actions-enabled --alarm-actions $SNSARN
aws logs put-metric-filter --region $Region --log-group-name $LogGroupName --filter-name VPCGatewayConfigChanges --filter-pattern '{ ($.eventName = CreateCustomerGateway) || ($.eventName = DeleteCustomerGateway) || ($.eventName = AttachInternetGateway) || ($.eventName = CreateInternetGateway) || ($.eventName = DeleteInternetGateway) || ($.eventName = DetachInternetGateway) }' --metric-transformations metricName=GatewayEventCount,metricNamespace=CloudTrailMetrics,metricValue=1
aws cloudwatch put-metric-alarm --region $Region --alarm-name VPCGatewayConfigChangesAlarm --alarm-description "Triggered by VPC Customer/Internet Gateway changes." --metric-name GatewayEventCount --namespace CloudTrailMetrics --statistic Sum --comparison-operator GreaterThanOrEqualToThreshold --evaluation-periods 1 --period 300 --threshold 1 --actions-enabled --alarm-actions $SNSARN
aws logs put-metric-filter --region $Region --log-group-name $LogGroupName --filter-name NetworkACLConfigChanges --filter-pattern '{ ($.eventName = CreateNetworkAcl) || ($.eventName = CreateNetworkAclEntry) || ($.eventName = DeleteNetworkAcl) || ($.eventName = DeleteNetworkAclEntry) || ($.eventName = ReplaceNetworkAclEntry) || ($.eventName = ReplaceNetworkAclAssociation) }' --metric-transformations metricName=NetworkAclEventCount,metricNamespace=CloudTrailMetrics,metricValue=1
aws cloudwatch put-metric-alarm --region $Region --alarm-name NetworkACLConfigChangesAlarm --alarm-description "Triggered by AWS Network ACL(s) config changes." --metric-name NetworkAclEventCount --namespace CloudTrailMetrics --statistic Sum --comparison-operator GreaterThanOrEqualToThreshold --evaluation-periods 1 --period 300 --threshold 1 --actions-enabled --alarm-actions $SNSARN
aws logs put-metric-filter --region $Region --log-group-name $LogGroupName --filter-name RootAccountUsage --filter-pattern '{ $.userIdentity.type = "Root" && $.userIdentity.invokedBy NOT EXISTS && $.eventType != "AwsServiceEvent" }' --metric-transformations metricName=RootAccountUsageEventCount,metricNamespace=CloudTrailMetrics,metricValue=1
aws cloudwatch put-metric-alarm --region $Region --alarm-name RootAccountUsageAlarm --alarm-description "Triggered by AWS Root Account usage." --metric-name RootAccountUsageEventCount --namespace CloudTrailMetrics --statistic Sum --comparison-operator GreaterThanOrEqualToThreshold --evaluation-periods 1 --period 300 --threshold 1 --actions-enabled --alarm-actions $SNSARN
aws logs put-metric-filter --region $Region --log-group-name $LogGroupName --filter-name RouteTableConfigChanges --filter-pattern '{ ($.eventName = CreateRoute) || ($.eventName = CreateRouteTable) || ($.eventName = ReplaceRoute) || ($.eventName = ReplaceRouteTableAssociation) || ($.eventName = DeleteRouteTable) || ($.eventName = DeleteRoute) || ($.eventName = DisassociateRouteTable) }' --metric-transformations metricName=RouteTableEventCount,metricNamespace=CloudTrailMetrics,metricValue=1
aws cloudwatch put-metric-alarm --region $Region --alarm-name RouteTableConfigChangesAlarm --alarm-description "Triggered by AWS Route Table config changes." --metric-name RouteTableEventCount --namespace CloudTrailMetrics --statistic Sum --comparison-operator GreaterThanOrEqualToThreshold --evaluation-periods 1 --period 300 --threshold 1 --actions-enabled --alarm-actions $SNSARN
aws logs put-metric-filter --region $Region --log-group-name $LogGroupName --filter-name S3BucketConfigChanges --filter-pattern '{ ($.eventSource = s3.amazonaws.com) && (($.eventName = PutBucketAcl) || ($.eventName = PutBucketPolicy) || ($.eventName = PutBucketCors) || ($.eventName = PutBucketLifecycle) || ($.eventName = PutBucketReplication) || ($.eventName = DeleteBucketPolicy) || ($.eventName = DeleteBucketCors) || ($.eventName = DeleteBucketLifecycle) || ($.eventName = DeleteBucketReplication)) }' --metric-transformations metricName=S3BucketEventCount,metricNamespace=CloudTrailMetrics,metricValue=1
aws cloudwatch put-metric-alarm --region $Region --alarm-name S3BucketConfigChangesAlarm --alarm-description "Triggered by AWS S3 Bucket config changes." --metric-name S3BucketEventCount --namespace CloudTrailMetrics --statistic Sum --comparison-operator GreaterThanOrEqualToThreshold --evaluation-periods 1 --period 300 --threshold 1 --actions-enabled --alarm-actions $SNSARN
aws logs put-metric-filter --region $Region --log-group-name $LogGroupName --filter-name SecurityGroupConfigChanges --filter-pattern '{ ($.eventName = AuthorizeSecurityGroupIngress) || ($.eventName = AuthorizeSecurityGroupEgress) || ($.eventName = RevokeSecurityGroupIngress) || ($.eventName = RevokeSecurityGroupEgress) || ($.eventName = CreateSecurityGroup) || ($.eventName = DeleteSecurityGroup) }' --metric-transformations metricName=SecurityGroupEventCount,metricNamespace=CloudTrailMetrics,metricValue=1
aws cloudwatch put-metric-alarm --region $Region --alarm-name SecurityGroupConfigChangesAlarm --alarm-description "Triggered by AWS security group(s) config changes." --metric-name SecurityGroupEventCount --namespace CloudTrailMetrics --statistic Sum --comparison-operator GreaterThanOrEqualToThreshold --evaluation-periods 1 --period 300 --threshold 1 --actions-enabled --alarm-actions $SNSARN
aws logs put-metric-filter --region $Region --log-group-name $LogGroupName --filter-name VPCNetworkConfigChanges --filter-pattern '{ ($.eventName = CreateVpc) || ($.eventName = DeleteVpc) || ($.eventName = ModifyVpcAttribute) || ($.eventName = AcceptVpcPeeringConnection) || ($.eventName = CreateVpcPeeringConnection) || ($.eventName = DeleteVpcPeeringConnection) || ($.eventName = RejectVpcPeeringConnection) || ($.eventName = AttachClassicLinkVpc) || ($.eventName = DetachClassicLinkVpc) || ($.eventName = DisableVpcClassicLink) || ($.eventName = EnableVpcClassicLink) }' --metric-transformations metricName=VpcEventCount,metricNamespace=CloudTrailMetrics,metricValue=1
aws cloudwatch put-metric-alarm --region $Region --alarm-name VPCNetworkConfigChangesAlarm --alarm-description "Triggered by AWS VPC(s) environment config changes." --metric-name VpcEventCount --namespace CloudTrailMetrics --statistic Sum --comparison-operator GreaterThanOrEqualToThreshold --evaluation-periods 1 --period 300 --threshold 1 --actions-enabled --alarm-actions $SNSARN